<Page x:Class="Paymetheus.PurchaseTickets"
      xmlns:local="clr-namespace:Paymetheus" 
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:vm="clr-namespace:Paymetheus.ViewModels"
      mc:Ignorable="d"
      x:Name="Page"
      WindowTitle="Page"
      FlowDirection="LeftToRight"
      WindowWidth="640" WindowHeight="480" d:DesignWidth="640" d:DesignHeight="580"
      DataContext="{Binding Source={StaticResource ViewModelLocator}, Path=PurchaseTicketsViewModel}">

    <ScrollViewer Style="{StaticResource MainPaneScrollViewerStyle}">
        <StackPanel Margin="40 20 40 0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="140"/>
                </Grid.ColumnDefinitions>
                <TextBlock Margin="0 0 0 10" Grid.Column="0" Text="Purchase tickets" Style="{StaticResource shellMediumHeaderTextBlockStyle}"/>
                <TextBlock Margin="0 37 0 40" Grid.Column="0" Style="{StaticResource shellDescriptionTextBlockStyle}">
                In order to stake mine, you must make a deposit to the network in the form of a ticket. 
                The ticket enters the owner in a lottery for the next several months, at which time it 
                may be chosen at any block for validation. The safest way to ensure that your vote 
                succeeds is to use a stake pool.
                </TextBlock>
                <Button Grid.Column="1"  HorizontalAlignment="Right" VerticalAlignment="Top" 
                    Content="REFRESH" Command="{Binding FetchStakeDifficultyCommand}"
                    Style="{StaticResource ButtonBlue}"/>
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="125"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="20*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="25"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Account" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                <ComboBox Tag="AccountComboBox" Grid.Column="3" Grid.Row="0" Height="20"
                          ItemsSource="{Binding Source={StaticResource ViewModelLocator}, Path=SynchronizerViewModel.Accounts}"
                          SelectedItem="{Binding SelectedAccount}"
                          ItemTemplate="{StaticResource ComboBoxAccountDataTemplate}"
                          Style="{DynamicResource ComboBoxStyleWithCurrency}" Foreground="#FF2970FF" ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"/>

                <TextBlock Grid.Column="1" Grid.Row="1" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Ticket address" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                <TextBox Grid.Column="3" Grid.Row="1" Name="TicketAddressTextBox" Height="20" VerticalAlignment="Center" TextAlignment="Left" 
                         Text="{Binding TicketAddressString, Mode=TwoWay, ValidatesOnExceptions=True}" Style="{StaticResource tooltipAlertTextBox}"/>

                <TextBlock Grid.Column="1" Grid.Row="2" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Using a pool?" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                <CheckBox Grid.Column="3" Grid.Row="2" Name="UsingAPoolCheckBox" Height="20" VerticalAlignment="Bottom" IsChecked="{Binding PoolChecked}"/>

                <TextBlock Grid.Column="1" Grid.Row="3" Text="Pool address" HorizontalAlignment="Right" VerticalAlignment="Center" 
                           FontSize="14" Foreground="#FF0C1E3E" TextAlignment="Right" TextWrapping="Wrap">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=UsingAPoolCheckBox}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>                  
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBox Grid.Column="3" Grid.Row="3" Name="PoolAddressTextBox" Height="20" VerticalAlignment="Center" TextAlignment="Left" Text="{Binding PoolAddressString, Mode=TwoWay, ValidatesOnExceptions=True}">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=UsingAPoolCheckBox}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock Grid.Column="1" Grid.Row="4" Text="Pool fee" HorizontalAlignment="Right" VerticalAlignment="Center" 
                           FontSize="14" Foreground="#FF0C1E3E" TextAlignment="Right" TextWrapping="Wrap">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=UsingAPoolCheckBox}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBox Grid.Column="3" Grid.Row="4" Name="PoolFeesTextBox" Height="20" VerticalAlignment="Center" HorizontalAlignment="Left" 
                         Width="50" TextAlignment="Right" Text="{Binding PoolFees, Mode=TwoWay, ValidatesOnExceptions=True}">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=UsingAPoolCheckBox}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock Grid.Column="1" Grid.Row="5" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Expiry (blocks)" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                <TextBox Grid.Column="3" Grid.Row="5" Name="ExpiryTextBox" Height="20" VerticalAlignment="Center" Text="{Binding Expiry, Mode=TwoWay, ValidatesOnExceptions=True}"
                         HorizontalAlignment="Left" Width="50" TextAlignment="Right">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock Grid.Column="1" Grid.Row="6" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Adjust fees?" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                <CheckBox Grid.Column="3" Grid.Row="6" Name="AdjustFeesCheckBox" Height="20" VerticalAlignment="Bottom" IsChecked="{Binding FeesChecked}"/>

                <TextBlock Grid.Column="1" Grid.Row="7" Text="Split fee (DCR/kB)" HorizontalAlignment="Right" VerticalAlignment="Center"
                           FontSize="14" Foreground="#FF0C1E3E" TextAlignment="Right" TextWrapping="Wrap">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=AdjustFeesCheckBox}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBox Grid.Column="3" Grid.Row="7" Name="SplitFeeTextBox" Height="20" VerticalAlignment="Center" HorizontalAlignment="Left" 
                         Text="{Binding SplitFeeString, Mode=TwoWay, ValidatesOnExceptions=True}" Width="80" TextAlignment="Right"
                         PreviewTextInput="OutputAmountTextBox_PreviewTextInput">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=AdjustFeesCheckBox}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock Grid.Column="1" Grid.Row="8" Text="Ticket fee (DCR/kB)" HorizontalAlignment="Right" VerticalAlignment="Center"
                           FontSize="14" Foreground="#FF0C1E3E" TextAlignment="Right" TextWrapping="Wrap">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=AdjustFeesCheckBox}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                
                <TextBox Grid.Column="3" Grid.Row="8" Name="TicketFeeTextBox" Height="20" VerticalAlignment="Center" HorizontalAlignment="Left" 
                         Text="{Binding TicketFeeString, Mode=TwoWay, ValidatesOnExceptions=True}" Width="80" TextAlignment="Right" 
                         PreviewTextInput="OutputAmountTextBox_PreviewTextInput">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=AdjustFeesCheckBox}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock Grid.Column="1" Grid.Row="9" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Tickets to purchase" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                <TextBox Grid.Column="3" Grid.Row="9" Name="TicketsToPurchaseTextBox" Height="20" VerticalAlignment="Center" HorizontalAlignment="Left" Width="50" TextAlignment="Right" 
                         Text="{Binding TicketsToPurchase, Mode=TwoWay, ValidatesOnExceptions=True}" Style="{StaticResource tooltipAlertTextBox}"/>
            </Grid>

            <Grid Margin="0 20 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="125"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="20*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Row="1" Grid.Column="1" Style="{DynamicResource ButtonBlue}" Content="PURCHASE"  HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding Execute}" Width="100"/>
                <Grid Grid.Column="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="3" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Ticket difficulty" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <TextBlock Grid.Row="1" Grid.Column="3" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Account balance" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <TextBlock Grid.Row="2" Grid.Column="3" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="Blocks until retarget" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                </Grid>
                <Grid Grid.Column="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="4" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="{Binding StakeDifficultyProperties.NextTicketPrice}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <TextBlock Grid.Row="1" Grid.Column="4" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="{Binding SelectedAccount.Balances.SpendableBalance}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <TextBlock Grid.Row="2" Grid.Column="4" Style="{StaticResource shellDescriptionTextBlockStyle}" Text="{Binding BlocksToRetarget}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                </Grid>
            </Grid>
            <TextBox Name="PurchaseTicketsSuccessTextBox" Text="{Binding ResponseString, Mode=TwoWay}" Foreground="#FF0C1E3E" FontSize="16" Margin="0 40 0 0" Background="Transparent" BorderThickness="0" IsReadOnly="True" TextWrapping="Wrap"/>
        </StackPanel>
    </ScrollViewer>
</Page>
